<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>effective java阅读1</title>
      <link href="/2021/11/25/effective%20java1/"/>
      <url>/2021/11/25/effective%20java1/</url>
      
        <content type="html"><![CDATA[<h3 id="创建和销毁对象"><a href="#创建和销毁对象" class="headerlink" title="创建和销毁对象"></a>创建和销毁对象</h3><ol><li><p>避免创建不必要的对象。</p><p>比如使用正则表达式matche字符串时，可以将其显式编译为一个pattern实例（不可变），当需要比较时，直接重用该实例。</p></li><li><p>避免使用终结方法和清除方法。</p><ul><li>永远也不要依赖终结方法或者清除方法来更新重要的持久状态。因为根本就不保证会被执行。</li><li>不要被Sysme.gc和System.runFinalization这两个方法迷惑。理由同上。</li><li>使用终结方法和清除方法有一个非常严重的性能损失。因为它会阻止有效的垃圾回收。</li><li>终结方法有一个严重的安全问题。（终结方法攻击）</li><li>如果确实有资源需要终止，可以使其实现AutoCloseable。一般的终结方法只是充当close的安全网。</li></ul></li><li><p>try-with-resources优先于try-finally。（在有嵌套try结构时有效避免问题，资源需要实现AutoCloseable接口）</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 阅读 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>effective java阅读2</title>
      <link href="/2021/11/25/effective%20java2/"/>
      <url>/2021/11/25/effective%20java2/</url>
      
        <content type="html"><![CDATA[<h3 id="第三章-对于所有对象都通用的方法"><a href="#第三章-对于所有对象都通用的方法" class="headerlink" title="第三章 对于所有对象都通用的方法"></a>第三章 对于所有对象都通用的方法</h3><ol><li><p>关于equals</p><ul><li><p>覆盖equals时必须要覆盖hashcode：map中先是由hashcode散列确定位置再由equals比较，假如两个一致却没覆盖hashcode便会导致map中存有重复的目标对象。</p></li><li><p>不要将equals声明中的object对象替换为其他类型</p><pre><code class="java">// bad example，这并没有覆盖方法，而是重载public boolean equals(MyClass o)&#123;&#125;// good 以Integer的equals方法为例public boolean equals(Object obj) &#123;        if (obj instanceof Integer) &#123;            return value == ((Integer)obj).intValue();        &#125;        return false;    &#125;</code></pre><blockquote><p>有时为了避免这种覆盖写成重载的情况出现，可以使用@Override进行注解</p></blockquote></li></ul></li><li><p>始终要覆盖toString() ： 提供好的toString实现可以使类使用起来更加舒适便于调试。</p><ul><li>无论是否制定格式，都应该在文档中明确表明意图。</li><li>无论是否制定格式，都为toString返回值中包含的所有信息提供一种可以通过编程访问的途径。</li></ul></li><li><p>谨慎覆盖clone()</p><ul><li>不可变的类永远都不应该提供clone方法。</li><li>实际上，clone方法就是另一个构造器；必须确保它不会伤害到原有对象，并确保正确地创建创建被克隆对象中的约束条件。</li><li>一般clone方法采用先super.clone，再逐域对象迭代、递归复制。</li><li>对象拷贝的更好方法是提供一个拷贝构造器。（数组最好利用clone复制）</li></ul></li><li><p>考虑实现Comparable接口</p><ul><li><p>一旦实现了comparable接口，它就可以跟许多泛型算法以及依赖于该接口的集合实现进行协作。</p></li><li><p>当比较依赖于两个值之间的区别时，不要使用以下代码。</p><pre><code class="java">// bad example 会造成整数溢出static Comparator&lt;Object&gt; hashCodeOrder = new Comparator&lt;&gt;()&#123;    public int compare(Object o1, Object o2) &#123;        return o1.hashCode() - o2.hashCode();    &#125;&#125;// good examplestatic Comparator&lt;Object&gt; hashCodeOrder = new Comparator&lt;&gt;()&#123;    public int compare(Object o1, Object o2) &#123;        return Integer.compare(o1.hashCode(), o2.hashCode());    &#125;&#125;// 使用比较器构造方法static Comparator&lt;Object&gt; hashCodeOrder = Comparator.comparingInt(o -&gt; o.hashCode());</code></pre></li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> 阅读 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>富爸爸穷爸爸阅读笔记1</title>
      <link href="/2021/11/24/%E5%AF%8C%E7%88%B8%E7%88%B8%E7%A9%B7%E7%88%B8%E7%88%B8/"/>
      <url>/2021/11/24/%E5%AF%8C%E7%88%B8%E7%88%B8%E7%A9%B7%E7%88%B8%E7%88%B8/</url>
      
        <content type="html"><![CDATA[<ul><li>富人获得资产，而穷人和中产阶级获得负债，只不过他们以为那些负债就是资产。</li></ul><blockquote><p>这个在大多数情况下个人感觉成立，不过就像最主要的负债导致的-&gt;房奴有时却又不如此，这类型的负债获得的房产在过去是在不断增值的，还有其他隐性收益。  </p><p>那么最后造成了房奴的原因，个人认为很明显和《稀缺》中所提到的个人时间的缺失从而无法提升自己的原因一致，那就是负债达到了某种上限，占到了个人收益的极大一部分而没有余钱进行其他有益的投资，让个人的财务007，最终陷入僵局。</p></blockquote><ul><li>资产是能把钱放进我口袋里的东西，不管我工作与否；负债是把钱从我口袋里取走的东西。</li></ul><blockquote><p>口袋不止单纯的金钱存款，头脑也是。</p></blockquote><ul><li>现金流说明了问题，即一个人怎样处理他的钱。</li></ul><blockquote><p>相配的品味，哈哈，收入增加支出增加，资产没长，负债却十分配合收入，不错不错。</p></blockquote><ul><li>财富就是支撑一个人生存多长时间的能力，或者说，如果我今天停止工作，我还能活多久？</li></ul><blockquote><p>忽然有了一个想法，财富过多会不会压制社会发展，但那些富人有钱了反而更加着迷赚钱，想必是一些新的东西-马斯洛理论的个人实现？还是说财富增长到一定程度会被资本裹挟？以后势必要一探究竟。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 阅读 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 财务 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>启动习惯</title>
      <link href="/2021/11/20/%E5%85%B3%E4%BA%8E%E4%B9%A0%E6%83%AF/"/>
      <url>/2021/11/20/%E5%85%B3%E4%BA%8E%E4%B9%A0%E6%83%AF/</url>
      
        <content type="html"><![CDATA[<h2 id="启动习惯"><a href="#启动习惯" class="headerlink" title="启动习惯"></a>启动习惯</h2><ol><li>万事开头难，有时候仅仅只要成功一次，会发现成功接踵而来。习惯的开端正是如此，此前为了养成早起的习惯，尝试了很多次早起，定了很多次的闹钟，结果发现根本没用，直到某天偶然且突然地早起了，结果就从这天开始，天天早起。</li><li>意志力是个消耗品，专注力也是个消耗品，把难以专注缺乏反馈但却useful的事情放在一天最开始完成，将那些能够得到持续性反馈的事情可以适当放在困倦的时候，但当进入心流状态时，番茄时钟法反而会破坏这种状态的延续性。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 日常 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 感悟 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>maven命令</title>
      <link href="/2021/11/19/maven%E5%91%BD%E4%BB%A4/"/>
      <url>/2021/11/19/maven%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<p><strong>1. clean：</strong>清理，在进行真正构建之前进行一些清理的工作，移除所有上一次构建生生的文件。执行该命令会删除项目路径下的target文件。但是不会删除本地的maven仓库已经生成的jar文件。</p><p><strong>2. validate：</strong>验证，验证工程是否正确，所需的信息是否完整。</p><p><strong>3. compile：</strong>编译源码，编译生成class文件，编译命令，只编译选定的目标，不管之前是否已经编译过，会在项目路径下生成一个target目录，在该目录中包含一个class目录，里面全是生成的class文件及字节码文件。</p><p><strong>4. package：</strong>打包，将工程文件打包为指定的格式，例如jar、war等。这个命令会在项目路径下生成一个target目录，并且拥有compile命令的功能进行编译，同会在target目录下生成项目的jar/war文件。如果a项目依赖于b项目，打包b项目时，只会打包到b项目下的target目录下，编译a项目时就会报错，因为找不到所依赖的b项目，说明a项目在本地仓库是没有找到它所依赖的b项目，这就需要install命令了。</p><p><strong>5. verify：</strong>核实，检查package是否有效，符合标准。</p><p><strong>6. install：</strong>安装至本地仓库，将包安装到本地仓库，让其他项目依赖。该命令包含了package命令的功能，不但会在项目路径下生成class文件和jar包，同时会在本地maven仓库生成jar文件，以供其他项目使用（如果没有设置过maven项目，一般在用户./m2目录下。如果a项目依赖于b项目，那么install b项目，会在本地仓库同时生成pom文件和jar文件，解决了package出错的问题。）</p><p><strong>7. build：</strong>功能类似compile，只是只能对整个项目进行编译。</p><p><strong>8. site：</strong>站点，生成项目的站点文档。</p><p><strong>9. deploy：</strong>``复制到远程仓库。</p>]]></content>
      
      
      <categories>
          
          <category> study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> maven </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>海底-1</title>
      <link href="/2021/11/18/%E5%B0%8F%E8%AF%B4/"/>
      <url>/2021/11/18/%E5%B0%8F%E8%AF%B4/</url>
      
        <content type="html"><![CDATA[<p>​        现在的我正躺在一个用石头制作而成的平台上，周遭的一切十分安静，天空泛起的波纹让原本的圆月有了暗色的条纹，我忽然意识到我正在海底，周围的海水包裹着我并不会使我难受，相反，这让我感到非常舒适，仿佛躺在过去夜晚中蜷缩着的被子中。</p><p>​        我用手支撑着身体坐了起来，突然间，我感受到了一种巨大的恐惧。因为，前方一无所有，准确地来说，我现在所处的石头平台就像一座高塔矗立在这深渊之中，而周围是一眼望不到尽头的黑暗。意识到现状的我不由得放低了重心，小心地趴在这个平台上。</p><p>​        过了大概有半个小时吧，接受现状的我还是决定乘着月色看看这深渊地下会有些什么。于是，我渐渐地爬到了高耸平台的边缘，努力地向下看去。很可惜，下方的世界一如包裹着我的黑暗深不见底。</p><p>​        等待等待，可能有几小时，可能有一天，我呆呆地坐在这里，但其实除了等待我也不知道还能做些什么，仿佛我被抛弃在了生命的孤岛中，能前进的永远只有脚下这小小的土地，我焦急我狂躁我悲伤但都无济于事，我所能做的只有等待，仿佛时间能告诉我命运，仿佛我脚下的孤岛似那漂流瓶能将我带到温暖的岸边，仿佛现在即将远逝而未来即将到来。但实际上我知道，结果早已命中注定，因为天上的月亮仍一直停留，仿佛它已经成为了永恒。</p><p>​        面对着这泛起波澜的月色，我不禁地自问，它是永恒，那在这小小天地的我又是什么呢，我竟能与它隔空相对，认知并定义？</p><p>​        但我不知道，因为我不知道的事情实在是太多了。在我的记忆中，在我过去生活过的时代中，即使是对已知数学领域全知的人也早已消失，世界发展得过于迅速，无数地人在拓展属于他那个细分领域的前沿，每个人都想保持着自身的不可替代性拼命地纵向横向发展，而我也不过是那样时代小小可替代的一环，可能是因为需求也被急速拓展了吧，让我这样的人也能在如此的社会中混得一职发展下去。唉，现在回想起来，像工作这样毫无意义却又因占据自身生命的一环而充满意义的事情实在是太多了，人总是在矛盾中生存在矛盾转换中发展。</p><p>​        但即使过去再过不堪，最终也还是要回归到这小小的石塔顶端，我摇摇头然后用手拍了拍自己脸。</p><p>​        </p><p>​        </p>]]></content>
      
      
      
        <tags>
            
            <tag> story </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>first_hexo_log</title>
      <link href="/2021/11/17/first-hexo-log/"/>
      <url>/2021/11/17/first-hexo-log/</url>
      
        <content type="html"><![CDATA[<p>This is my first hexo-log.</p>]]></content>
      
      
      
        <tags>
            
            <tag> diary </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
